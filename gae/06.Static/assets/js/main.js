// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

jQuery(function() {
  var ModoScript, ModoScriptList, ModoScriptView, view;
  ModoScript = (function(_super) {

    __extends(ModoScript, _super);

    function ModoScript() {
      return ModoScript.__super__.constructor.apply(this, arguments);
    }

    ModoScript.prototype.initialize = function() {
      console.log("ModoScript#init");
    };

    return ModoScript;

  })(Backbone.Model);
  ModoScriptList = (function(_super) {

    __extends(ModoScriptList, _super);

    function ModoScriptList() {
      return ModoScriptList.__super__.constructor.apply(this, arguments);
    }

    ModoScriptList.prototype.model = ModoScript;

    ModoScriptList.prototype.url = "http://localhost:8080/";

    ModoScriptList.prototype.parse = function(res) {
      return res;
    };

    return ModoScriptList;

  })(Backbone.Collection);
  ModoScriptView = (function(_super) {

    __extends(ModoScriptView, _super);

    function ModoScriptView() {
      return ModoScriptView.__super__.constructor.apply(this, arguments);
    }

    ModoScriptView.prototype.el = "#modo-script-list";

    ModoScriptView.prototype.initialize = function() {
      console.log("ModoScriptView#init");
      this.collection = new ModoScriptList();
      this.collection.fetch();
    };

    ModoScriptView.prototype.events = {
      "click button": "render"
    };

    ModoScriptView.prototype.render = function(e) {
      var element, key, mo, str;
      str = "";
      mo = this.collection.models;
      for (key in mo) {
        element = mo[key];
        str += this.template(element[key]);
      }
      $(this.el).html(str);
    };

    ModoScriptView.prototype.template = function(script) {
      str += "<tr>";
      +'<td>' + script.name + '</td>';
      +'<td>' + script.rating + '</td>';
      +'<td>' + script.updated + '</td>';
      +'<td><button class="btn btn-mini">detail</button></td>';
      +'</tr>';
      return str;
    };

    return ModoScriptView;

  })(Backbone.View);
  return view = new ModoScriptView();
});
